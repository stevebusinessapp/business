# Generated manually for restructured inventory app

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('in_stock', 'In Stock'), ('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('reserved', 'Reserved'), ('damaged', 'Damaged'), ('returned', 'Returned'), ('disposed', 'Disposed'), ('removed', 'Removed'), ('backordered', 'Backordered'), ('discontinued', 'Discontinued')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Inventory Status',
                'verbose_name_plural': 'Inventory Statuses',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('columns', models.JSONField(default=list, help_text='Column definitions and order')),
                ('column_visibility', models.JSONField(default=dict, help_text='Column visibility settings')),
                ('column_widths', models.JSONField(default=dict, help_text='Column width settings')),
                ('column_order', models.JSONField(default=list, help_text='Column order preferences')),
                ('auto_calculate', models.BooleanField(default=True)),
                ('calculation_fields', models.JSONField(default=list, help_text='Fields that trigger calculations')),
                ('calculation_rules', models.JSONField(default=dict, help_text='Custom calculation rules')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='inventory/logos/')),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('company_address', models.TextField(blank=True)),
                ('company_phone', models.CharField(blank=True, max_length=50)),
                ('company_email', models.EmailField(blank=True, max_length=254)),
                ('primary_color', models.CharField(default='#007bff', max_length=7)),
                ('secondary_color', models.CharField(default='#6c757d', max_length=7)),
                ('show_totals', models.BooleanField(default=True)),
                ('show_grand_total', models.BooleanField(default=True)),
                ('allow_inline_editing', models.BooleanField(default=True)),
                ('allow_bulk_operations', models.BooleanField(default=True)),
                ('enable_sorting', models.BooleanField(default=True)),
                ('enable_filtering', models.BooleanField(default=True)),
                ('export_settings', models.JSONField(default=dict, help_text='Export configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_layouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Layout',
                'verbose_name_plural': 'Inventory Layouts',
                'ordering': ['-is_default', '-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='InventoryCustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('decimal', 'Decimal'), ('date', 'Date'), ('datetime', 'Date & Time'), ('select', 'Dropdown'), ('multiselect', 'Multiple Choice'), ('boolean', 'Yes/No'), ('url', 'URL'), ('email', 'Email'), ('phone', 'Phone'), ('textarea', 'Long Text'), ('file', 'File Upload'), ('image', 'Image')], max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('is_unique', models.BooleanField(default=False)),
                ('default_value', models.TextField(blank=True)),
                ('help_text', models.CharField(blank=True, max_length=200)),
                ('choices', models.JSONField(blank=True, default=list)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('width', models.CharField(default='auto', help_text="Column width (e.g., '100px', '20%')", max_length=10)),
                ('is_calculation_field', models.BooleanField(default=False, help_text='Include in calculations')),
                ('calculation_formula', models.CharField(blank=True, help_text='Custom calculation formula', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('layout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_fields', to='inventory.inventorylayout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_custom_fields', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Custom Field',
                'verbose_name_plural': 'Inventory Custom Fields',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200)),
                ('sku_code', models.CharField(max_length=100)),
                ('data', models.JSONField(default=dict, help_text='Dynamic field values')),
                ('calculated_data', models.JSONField(default=dict, help_text='Auto-calculated values')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorylayout')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='inventory.inventorystatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'sku_code')},
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Stock Adjustment'), ('transfer', 'Transfer'), ('return', 'Return'), ('status_change', 'Status Change'), ('price_change', 'Price Change'), ('field_update', 'Field Update')], max_length=20)),
                ('quantity_change', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('quantity_before', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity_after', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('field_changes', models.JSONField(default=dict, help_text='Track field value changes')),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.inventoryitem')),
                ('status_after', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_after', to='inventory.inventorystatus')),
                ('status_before', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_before', to='inventory.inventorystatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Transaction',
                'verbose_name_plural': 'Inventory Transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('stock_adjustment', 'Stock Adjustment'), ('status_change', 'Status Change'), ('import', 'Import'), ('export', 'Export'), ('layout_change', 'Layout Change'), ('field_update', 'Field Update'), ('calculation', 'Calculation')], max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='inventory.inventoryitem')),
                ('layout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='inventory.inventorylayout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Log',
                'verbose_name_plural': 'Inventory Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImportedInventoryFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('file_type', models.CharField(choices=[('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10)),
                ('column_mapping', models.JSONField(default=dict, help_text='Column mapping from file to layout')),
                ('import_settings', models.JSONField(default=dict, help_text='Import configuration')),
                ('total_rows', models.PositiveIntegerField(default=0)),
                ('imported_rows', models.PositiveIntegerField(default=0)),
                ('failed_rows', models.PositiveIntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imports', to='inventory.inventorylayout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imported_inventory_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Imported Inventory File',
                'verbose_name_plural': 'Imported Inventory Files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(choices=[('excel', 'Excel (.xlsx)'), ('csv', 'CSV'), ('pdf', 'PDF'), ('json', 'JSON')], max_length=10)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('include_calculations', models.BooleanField(default=True)),
                ('include_branding', models.BooleanField(default=True)),
                ('export_settings', models.JSONField(default=dict, help_text='Export-specific settings')),
                ('total_items', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='inventory.inventorylayout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Export',
                'verbose_name_plural': 'Inventory Exports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout_config', models.JSONField(default=dict, help_text='Layout configuration')),
                ('field_config', models.JSONField(default=dict, help_text='Field configuration')),
                ('branding_config', models.JSONField(default=dict, help_text='Branding configuration')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all users')),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Template',
                'verbose_name_plural': 'Inventory Templates',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
    ] 